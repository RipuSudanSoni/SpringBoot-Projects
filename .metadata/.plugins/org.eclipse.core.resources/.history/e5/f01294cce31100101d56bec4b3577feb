package com.example.Tesing.project.controller;


import org.springframework.web.bind.annotation.*;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

@RestController
@CrossOrigin(origins = "http://localhost:5173") // Allow React frontend
public class EncryptController {

    private static final String SECRET_KEY = "1234567890123456"; // 16 chars = 128-bit key

    @PostMapping("/encrypt")
    public TextResponse encryptText(@RequestBody TextRequest request) {
        try {
            String encrypted = encrypt(request.getText(), SECRET_KEY);
            return new TextResponse(encrypted);
        } catch (Exception e) {
            throw new RuntimeException("Encryption error", e);
        }
    }

    private String encrypt(String plainText, String secret) throws Exception {
        SecretKeySpec key = new SecretKeySpec(secret.getBytes(), "AES");
        Cipher cipher = Cipher.getInstance("AES");

        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] encrypted = cipher.doFinal(plainText.getBytes());

        return Base64.getEncoder().encodeToString(encrypted);
    }
}
